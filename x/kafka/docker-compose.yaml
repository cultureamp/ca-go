version: "3.9"

# No HTTPS proxy required for GitHub actions container connectivity
x-https-proxy-env: &https-proxy-env
  HTTPS_PROXY: ""
  https_proxy: ""

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    links:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      <<: *https-proxy-env
      KAFKA_VERSION: '2.3.1'
      KAFKA_BROKER_ID: '1'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: 'test-topic-1:10:1'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_MESSAGE_MAX_BYTES: '200000000'
      KAFKA_LISTENERS: 'INTERNAL://:9092,EXTERNAL://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:9092,EXTERNAL://localhost:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 5s
      timeout: 10s
      retries: 10
  schemaregistry:
    image: confluentinc/cp-schema-registry:7.5.2
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:9092"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "curl", "--output", "/dev/null", "--silent", "--head", "--fail", "http://schemaregistry:8081/subjects" ]
      interval: 3s
      timeout: 5s
      retries: 40
